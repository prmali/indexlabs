{"version":3,"sources":["IndexLabs_Colored.png","logo.svg","components/generic/topbar.jsx","components/generic/footer.jsx","components/home/info.jsx","components/home/breaker.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Topbar","props","useState","collapsed","setCollapsed","class","Navbar","color","light","fixed","expand","NavbarBrand","src","logo","alt","NavbarToggler","onClick","Collapse","isOpen","navbar","Nav","className","pullRight","NavItem","NavLink","to","Footer","Container","Row","md","sm","xs","Col","vertical","React","Component","Info","Card","CardBody","CardTitle","CardSubtitle","CardImg","top","width","CardText","Button","Breaker","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1ee5ec84.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/IndexLabs_Colored.eb58f058.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useState } from 'react';\r\nimport { \r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    NavbarText\r\n} from 'reactstrap';\r\n\r\nimport logo from '../../IndexLabs_Colored.png';\r\nimport './styling/topbar.scss';\r\n\r\nconst Topbar = (props) => {\r\n    const [collapsed, setCollapsed] = useState(true);\r\n\r\n    const toggleNavbar = () => setCollapsed(!collapsed);\r\n    \r\n    return (\r\n        <div class=\"topbar\">\r\n            <Navbar color=\"faded\" light fixed expand=\"md\">\r\n                <NavbarBrand><img src={ logo } alt=\"IndexLabs Logo\"/></NavbarBrand>\r\n                <NavbarToggler onClick={toggleNavbar} />\r\n                <Collapse isOpen={collapsed} navbar>\r\n                    <Nav className=\"ml-auto nav-item-container\" pullRight navbar>\r\n                        <NavItem>\r\n                            <NavLink to=\"/\">Home</NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink to=\"/\">ICO</NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink to=\"/\">Whitepaper</NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink to=\"/\">Overview</NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink to=\"/\">Roadmap</NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink to=\"/\">Sector Initiative</NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n                </Collapse>\r\n            </Navbar>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Topbar;","import React, { Component } from 'react';\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Nav,\r\n    NavItem,\r\n    NavLink\r\n} from 'reactstrap';\r\nimport './styling/footer.scss';\r\n\r\nclass Footer extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"footer\">\r\n                <Container>\r\n                    <Row md=\"3\" sm=\"1\" xs=\"1\">\r\n                        <Col>\r\n                            <span><div className=\"format\"></div><p>Resources</p></span>\r\n                            <Nav vertical>\r\n                                <NavItem>\r\n                                    <NavLink to=\"/\">Dashboard</NavLink>\r\n                                    <NavLink to=\"/\">Sectors</NavLink>\r\n                                    <NavLink to=\"/\">Developers</NavLink>\r\n                                    <NavLink to=\"/\">Ethereum</NavLink>\r\n                                    <NavLink to=\"/\">Merch</NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Col>\r\n\r\n                        <Col>\r\n                            <span><div className=\"format\"></div><p>Plans</p></span>\r\n                            <Nav vertical>\r\n                                <NavItem>\r\n                                    <NavLink to=\"/\">Whitepaper</NavLink>\r\n                                    <NavLink to=\"/\">Roadmap</NavLink>\r\n                                    <NavLink to=\"/\">Pre-ICO</NavLink>\r\n                                    <NavLink to=\"/\">ICO</NavLink>\r\n                                    <NavLink to=\"/\">Voting Initative</NavLink>\r\n                                    <NavLink to=\"/\">Future</NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Col>\r\n\r\n                        <Col>\r\n                            <span><div className=\"format\"></div><p>Policies</p></span>\r\n                            <Nav vertical>\r\n                                <NavItem>\r\n                                    <NavLink to=\"/\">Privacy</NavLink>\r\n                                    <NavLink to=\"/\">Useage</NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { \r\n    Container,\r\n    Col,\r\n    Row,\r\n    Card,\r\n    CardImg,\r\n    CardText,\r\n    CardBody,\r\n    CardTitle,\r\n    CardSubtitle,\r\n    Button,\r\n} from 'reactstrap';\r\nimport './styling/info.scss';\r\n\r\nclass Info extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"mid\">\r\n                <h2>We are an</h2>\r\n                <h1>Ecosystem</h1>\r\n                <Container className=\"card-container\">\r\n                    <Row md=\"3\" sm=\"1\" xs=\"1\">\r\n                        <Col>\r\n                            <Card>\r\n                                <CardBody>\r\n                                    <span><div className=\"format\"></div><CardTitle>Index Linking</CardTitle></span>\r\n                                    <CardSubtitle>Sector Creation</CardSubtitle>\r\n                                    <CardImg top width=\"100%\" src=\"/assets/318x180.svg\" />\r\n                                    <CardText>Simple description covering base details regarding the header</CardText>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n\r\n                        <Col>\r\n                            <Card>\r\n                                <CardBody>\r\n                                    <span><div className=\"format\"></div><CardTitle>Community Driven</CardTitle></span>\r\n                                    <CardSubtitle>Sector Creation</CardSubtitle>\r\n                                    <CardImg top width=\"100%\" src=\"/assets/318x180.svg\" />\r\n                                    <CardText>Simple description covering base details regarding the header</CardText>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n\r\n                        <Col>\r\n                            <Card>\r\n                                <CardBody>\r\n                                    <span><div className=\"format\"></div><CardTitle>Community Driven</CardTitle></span>\r\n                                    <CardSubtitle>Sector Creation</CardSubtitle>\r\n                                    <CardImg top width=\"100%\" src=\"/assets/318x180.svg\" />\r\n                                    <CardText>Simple description covering base details regarding the header</CardText>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                <div className=\"learnContainer\">\r\n                    <span>\r\n                        <div className=\"block block1\"></div>\r\n                        <div className=\"block block2\"></div>\r\n                        <p>learn more</p>\r\n                    </span>\r\n                </div>\r\n\r\n                <Button>Whitepaper</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Info;","import React from 'react';\r\nimport { \r\n    Button,\r\n    Container,\r\n    Row,\r\n    Col\r\n} from 'reactstrap';\r\n\r\nimport './styling/breaker.scss';\r\n\r\nclass Breaker extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"breaker\">\r\n                <Row md=\"3\" sm=\"1\" xs=\"1\">\r\n                    <Col className=\"roadmap\">\r\n                    \r\n                    </Col>\r\n\r\n                    <Col className=\"whitepaper\">\r\n                    \r\n                    </Col>\r\n\r\n                    <Col className=\"socials\">\r\n                    \r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Breaker;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Topbar from './components/generic/topbar.jsx';\nimport Footer from './components/generic/footer.jsx';\nimport Info from './components/home/info.jsx';\nimport Breaker from './components/home/breaker.jsx';\n\nfunction App() {\n  return (\n    <div>\n      <Topbar />\n      <Info />\n      <Breaker />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}